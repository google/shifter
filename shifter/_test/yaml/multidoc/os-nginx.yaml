# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: Route
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  host: "nginx.test.com"
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: nginx
    weight: 100
  wildcardPolicy: None
status:
  ingress: null
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  generation: 1
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    app: nginx
    deploymentconfig: nginx
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        deploymentconfig: nginx
    spec:
        containers:
        - args:
          command:
          - /usr/libexec/s2i/run
          image: centos/nginx-112-centos7
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080-tcp
            timeoutSeconds: 20
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/
            name: volume-s35u4
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/conf.d
            name: volume-1l43r
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/default.d
            name: volume-tlwx7
          - mountPath: /opt/app-root/src
            name: nginx-root
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: volume-s35u4
        - configMap:
            defaultMode: 420
            name: nginx-conf.d
          name: volume-1l43r
        - configMap:
            defaultMode: 420
            name: nginx-default.d
          name: volume-tlwx7
        - name: nginx-root
          persistentVolumeClaim:
            claimName: "nginx-root"
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nginx
        from:
          kind: ImageStreamTag
          name: nginx-112-centos7:latest
      type: ImageChange
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: nginx
    deploymentconfig: nginx
  sessionAffinity: None
  type: ClusterIP
  status:
    loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
  creationTimestamp: null
  name: nginx-root
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes auto;
          pid /run/nginx.pid;
          events {
              worker_connections 768;
          }
          http {
                  sendfile on;
                  tcp_nopush on;
                  tcp_nodelay on;
                  keepalive_timeout 65;
                  types_hash_max_size 2048;
                  include /etc/nginx/mime.types;
                  default_type application/octet-stream;
                  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                  ssl_prefer_server_ciphers on;
                  server {
                    listen 8081;
                    location / {
                      return 200 'Nginx is up and running';
                      add_header Content-Type text/plain;
                    }
                  }
                  log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request request_time $request_time' status $status upstream-status $upstream_status;
                  access_log /var/log/nginx/access.log upstreamlog;
                  error_log /var/log/nginx/error.log;
                  gzip on;
                  gzip_disable "msie6";
          }